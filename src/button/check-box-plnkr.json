{"index.html":"<!DOCTYPE html><html><head>\n<meta charset=\"UTF-8\">\n<link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n<link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n<script type=\"text/javascript\">\n   if (/MSIE d|Trident.*rv:/.test(navigator.userAgent)) {\n       document.write(\"<script src='https://cdnjs.cloudflare.com/ajax/libs/bluebird/3.3.5/bluebird.min.js'><\\/script>\");\n   }\n</script>\n<script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n</head>\n<body>\n<div class=\"control-section\">\n    <div class=\"checkbox-control\">\n        <div class=\"row\">\n            <input id=\"checked\" type=\"checkbox\">\n        </div>\n        <div class=\"row\">\n            <input id=\"disabled\" type=\"checkbox\">\n        </div>\n        <div class=\"row\">\n            <input id=\"indeterminate\" type=\"checkbox\">\n        </div>\n    </div>\n</div>\n\n\n<style>\n     /* CheckBox Styles */\n     .checkbox-control {\n        margin: 12% 0 12% 40%;\n    }\n\n    @media only screen and (max-width: 700px) {\n        .checkbox-control {\n            margin: 20% 0 0 32%;\n        }\n\n        .control-section {\n            min-height: 200px;\n        }\n    }\n\n    @media only screen and (max-width: 500px) {\n        .control-section {\n            min-height: 200px;\n        }\n\n        .checkbox-control {\n            margin-top: 27%;\n            margin-left: 20%;\n            margin-bottom: 27%;\n        }\n    }\n\n    .control-section .row {\n        margin: 20px 0;\n    }\n</style>\n<script src=\"index.js\" type=\"text/javascript\"></script>\n\n</body></html>","index.js":"ej.base.enableRipple(true)\n\r\n    var checkBoxObj = new ej.buttons.CheckBox({ label: 'CheckBox: true', checked: true, change: onChange });\r\n    checkBoxObj.appendTo('#checked');\r\n\r\n    checkBoxObj = new ej.buttons.CheckBox({ label: 'Checked, Disabled', disabled: true, checked: true });\r\n    checkBoxObj.appendTo('#disabled');\r\n\r\n    checkBoxObj = new ej.buttons.CheckBox({ label: 'Indeterminate, Disabled', indeterminate: true, disabled: true });\r\n    checkBoxObj.appendTo('#indeterminate');\r\n\r\n    // function to handle the CheckBox change event\r\n    function onChange(args) {\r\n        this.label = 'CheckBox: ' + args.checked;\r\n    }\r\n"}