{"index.html":"<!DOCTYPE html><html><head>\n<meta charset=\"UTF-8\">\n<link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n<link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n<script type=\"text/javascript\">\n   if (/MSIE d|Trident.*rv:/.test(navigator.userAgent)) {\n       document.write(\"<script src='https://cdnjs.cloudflare.com/ajax/libs/bluebird/3.3.5/bluebird.min.js'><\\/script>\");\n   }\n</script>\n<script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n</head>\n<body>\n<div>\n    <div class=\"col-md-8 control-section\">\n        <div class=\"content-wrapper\">\n            <div id=\"user-container\"></div>\n        </div>\n    </div>\n    <div class=\"col-md-4 property-section\">\n        <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n            <tbody><tr style=\"height: 50px\">\n                <td style=\"width: 30%\">\n                    <div id=\"pointerValue\">Pointer Value <span> &#xA0;&#xA0;&#xA0;70</span> </div>\n                </td>\n                <td style=\"width: 40%;\">\n                    <div>\n                        <input type=\"range\" id=\"value\" value=\"70\" min=\"0\" max=\"120\" style=\"width:90%\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td style=\"width: 20%\">\n                    <div id=\"enablePointer\">Enable Drag</div>\n                </td>\n                <td style=\"width: 40%;\">\n                    <div>\n                        <input type=\"checkbox\" id=\"enable\" checked=\"true\" style=\"width:90%\">\n                    </div>\n                </td>\n            </tr>\n        </tbody></table>\n    </div>\n</div>\n\n\n<script src=\"index.js\" type=\"text/javascript\"></script>\n\n</body></html>","index.js":"ej.base.enableRipple(true)\n/**\r\n * Sample for Pointer drag\r\n */\r\n\r\n    var content = '<div style=\"font-size: 14px;color:#E5C31C;font-weight: lighter;font-style: oblique;\"><span>';\r\n    var pointerValue;\r\n    var circulargauge = new ej.circulargauge.CircularGauge({\r\n        load: function (args) {\r\n            var selectedTheme = location.hash.split('/')[1];\r\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\r\n            args.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\r\n        },\r\n        enablePointerDrag: true,\r\n        dragMove: function (args) {\r\n            pointerValue = Math.round(args.currentValue);\r\n            document.getElementById('pointerValue').innerHTML = 'Pointer Value <span> &nbsp;&nbsp;&nbsp;' + pointerValue;\r\n            document.getElementById('value').value = pointerValue.toString();\r\n            circulargauge.setAnnotationValue(0, 0, content + pointerValue + ' MPH</span></div>');\r\n        },\r\n        dragEnd: function (args) {\r\n            pointerValue = Math.round(args.currentValue);\r\n            setPointersValue(circulargauge, pointerValue);\r\n        },\r\n        axes: [{\r\n            annotations: [{\r\n                content: content + '70 MPH</span></div>',\r\n                angle: 180, zIndex: '1',\r\n                radius: '45%'\r\n            }],\r\n            endAngle: 140,\r\n            startAngle: 220,\r\n            lineStyle: { width: 0, color: '#9E9E9E' },\r\n            radius: '80%', minimum: 0,\r\n            maximum: 120,\r\n            majorTicks: { useRangeColor: true },\r\n            minorTicks: { useRangeColor: true },\r\n            labelStyle: { useRangeColor: true },\r\n            ranges: [{\r\n                start: 0,\r\n                end: 40,\r\n                startWidth: 8, endWidth: 8,\r\n                radius: '108%',\r\n                color: '#30B32D'\r\n            }, {\r\n                start: 40,\r\n                end: 100,\r\n                startWidth: 8, endWidth: 8,\r\n                radius: '108%',\r\n                color: '#E5C31C'\r\n            }, {\r\n                start: 100, end: 120,\r\n                startWidth: 8, endWidth: 8,\r\n                radius: '108%',\r\n                color: '#F03E3E'\r\n            }],\r\n            pointers: [{\r\n                type: 'Marker', value: 70,\r\n                markerShape: 'InvertedTriangle',\r\n                radius: '110%',\r\n                markerHeight: 20,\r\n                color: '#E5C31C',\r\n                markerWidth: 20\r\n            }, {\r\n                value: 70,\r\n                radius: '60%',\r\n                cap: { radius: 10, border: { width: 5, color: '#E5C31C' } },\r\n                needleTail: { length: '0%', color: '#E5C31C' },\r\n                color: '#E5C31C',\r\n                markerWidth: 5\r\n            }]\r\n        }]\r\n    });\r\n    circulargauge.appendTo('#user-container');\r\n    function setPointersValue(circulargauge, pointerValue) {\r\n        var color = ej.circulargauge.getRangeColor(pointerValue, (circulargauge.axes[0].ranges), circulargauge.axes[0].pointers[0].color);\r\n        circulargauge.axes[0].pointers[0].color = color;\r\n        circulargauge.axes[0].pointers[1].color = color;\r\n        circulargauge.axes[0].pointers[0].animation.enable = true;\r\n        circulargauge.axes[0].pointers[1].animation.enable = true;\r\n        circulargauge.axes[0].pointers[0].needleTail.color = color;\r\n        circulargauge.axes[0].pointers[1].needleTail.color = color;\r\n        circulargauge.axes[0].pointers[0].cap.border.color = color;\r\n        circulargauge.axes[0].pointers[1].cap.border.color = color;\r\n        circulargauge.setPointerValue(0, 1, pointerValue);\r\n        circulargauge.setPointerValue(0, 0, pointerValue);\r\n        content = '<div style=\"font-size: 14px;color:' + color + ';font-weight: lighter;font-style: oblique;\"><span>';\r\n        circulargauge.setAnnotationValue(0, 0, content + pointerValue + ' MPH</span></div>');\r\n    }\r\n    document.getElementById('value').ontouchmove = document.getElementById('value').onpointermove =\r\n        document.getElementById('value').onchange = function () {\r\n            var pointerValue = parseInt(document.getElementById('value').value, 10);\r\n            setPointersValue(circulargauge, pointerValue);\r\n            document.getElementById('pointerValue').innerHTML = 'Pointer Value <span> &nbsp;&nbsp;&nbsp;' + pointerValue;\r\n        };\r\n    document.getElementById('enable').onchange = function () {\r\n        var value = document.getElementById('enable').checked;\r\n        circulargauge.enablePointerDrag = value;\r\n    };\r\n"}