{"index.html":"<!DOCTYPE html><html><head>\n<meta charset=\"UTF-8\">\n<link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n<link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n<script type=\"text/javascript\">\n   if (/MSIE d|Trident.*rv:/.test(navigator.userAgent)) {\n       document.write(\"<script src='https://cdnjs.cloudflare.com/ajax/libs/bluebird/3.3.5/bluebird.min.js'><\\/script>\");\n   }\n</script>\n<script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n</head>\n<body>\n<div>\n    <div class=\"col-md-8 control-section\">\n        <div id=\"rangeContainer\" style=\"width:100%\"></div>\n    </div>\n    <div class=\"col-md-4 property-section\">\n        <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n            <tbody><tr>\n                <td>\n                    <div> Select Range</div>\n                </td>\n                <td>\n                    <div>\n                        <select name=\"selectIndex\" autocomplete=\"off\" id=\"rangeIndex\" style=\"width:90%\">\n                            <option value=\"0\">Low</option>\n                            <option value=\"1\">Moderate</option>\n                            <option value=\"2\">High</option>\n                        </select>\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <div>Range Color</div>\n                </td>\n                <td>\n                    <div>\n                        <div class=\"e-float-input\" style=\"margin-top: 0px;\">\n                            <input type=\"text\" value=\"#F03E3E\" id=\"color\" style=\"margin-left: -10px\">\n                        </div>\n\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <div>Range Font Color</div>\n                </td>\n                <td>\n                    <div>\n                        <select name=\"selectIndex\" autocomplete=\"off\" id=\"useRangeColor\" style=\"width:90%\">\n                            <option value=\"font\" selected>Default Color</option>\n                            <option value=\"range\">Range Color</option>\n                        </select>\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <div id=\"startRangeValue\">Range Start\n                        <span>&#xA0;&#xA0;&#xA0;0</span>\n                    </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" id=\"start\" value=\"0\" min=\"0\" max=\"100\" style=\"width:90%;\">\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <div id=\"endRangeValue\">Range End\n                        <span>&#xA0;&#xA0;&#xA0;32</span>\n                    </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" id=\"end\" value=\"32\" min=\"0\" max=\"100\" style=\"width:90%;\">\n                    </div>\n                </td>\n            </tr>\n\n            <tr>\n                <td>\n                    <div id=\"startWidthValue\"> Range Start Width\n                        <span>&#xA0;&#xA0;&#xA0;15</span>\n                    </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" id=\"startWidth\" value=\"15\" min=\"0\" max=\"30\" style=\"width:90%;\">\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <div id=\"endWidthValue\">Range End Width\n                        <span>&#xA0;&#xA0;&#xA0;15</span>\n                    </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" id=\"endWidth\" value=\"15\" min=\"0\" max=\"30\" style=\"width:90%;\">\n                    </div>\n                </td>\n            </tr>\n        </tbody></table>\n    </div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n<script src=\"index.js\" type=\"text/javascript\"></script>\n\n</body></html>","index.js":"ej.base.enableRipple(true)\n/**\r\n * Linear Gauge Range Sample\r\n */\r\nfunction linear() {\r\n    var gauge = new ej.lineargauge.LinearGauge({\r\n        load: function (args) {\r\n            var selectedTheme = location.hash.split('/')[1];\r\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\r\n            args.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\r\n        },\r\n        orientation: 'Horizontal',\r\n        axes: [{\r\n            line: {\r\n                width: 0\r\n            },\r\n            labelStyle: {\r\n                format: '{value}%',\r\n                offset: 30\r\n            },\r\n            pointers: [\r\n                {\r\n                    value: 35,\r\n                    height: 10,\r\n                    width: 10,\r\n                    markerType: 'Triangle',\r\n                    placement: 'Near',\r\n                    offset: -40,\r\n                }\r\n            ],\r\n            majorTicks: {\r\n                height: 0\r\n            },\r\n            minorTicks: {\r\n                height: 0\r\n            },\r\n            ranges: [{\r\n                start: 0,\r\n                end: 32,\r\n                color: '#30B32D',\r\n                startWidth: 15,\r\n                endWidth: 15\r\n            },\r\n            {\r\n                start: 32,\r\n                end: 68,\r\n                startWidth: 15,\r\n                endWidth: 15,\r\n                color: '#FFDF00'\r\n            },\r\n            {\r\n                start: 68,\r\n                end: 100,\r\n                startWidth: 15,\r\n                endWidth: 15,\r\n                color: '#F03E3E'\r\n            }]\r\n        }],\r\n        annotations: [{\r\n            content: '<div id=\"pointer\" style=\"width:20px\"><h1 style=\"font-size:18px;\">35</h1></div>',\r\n            axisIndex: 0,\r\n            axisValue: 35,\r\n            y: -50, zIndex: '1'\r\n        }]\r\n    });\r\n    return gauge;\r\n}\r\n\r\n    var gauge = new ej.lineargauge.LinearGauge(linear());\r\n    gauge.appendTo('#rangeContainer');\r\n    var rangeIndex = new ej.dropdowns.DropDownList({\r\n        index: 0,\r\n        placeholder: 'Select Range Bar Color',\r\n        width: 120,\r\n        change: function () {\r\n            var value = +rangeIndex.value;\r\n            var start = document.getElementById('start');\r\n            var end = document.getElementById('end');\r\n            var rangeColor = document.getElementById('color');\r\n            var startWidth = document.getElementById('startWidth');\r\n            var endWidth = document.getElementById('endWidth');\r\n            start.value = gauge.axes[0].ranges[value].start.toString();\r\n            end.value = gauge.axes[0].ranges[value].end.toString();\r\n            startWidth.value = gauge.axes[0].ranges[value].startWidth.toString();\r\n            endWidth.value = gauge.axes[0].ranges[value].endWidth.toString();\r\n            rangeColor.value = gauge.axes[0].ranges[value].color.toString();\r\n            document.getElementById('startWidthValue').innerHTML = 'Range Start Width<span>&nbsp;&nbsp;&nbsp;' + startWidth.value;\r\n            document.getElementById('endWidthValue').innerHTML = 'Range End Width<span>&nbsp;&nbsp;&nbsp;' + endWidth.value;\r\n            document.getElementById('startRangeValue').innerHTML = 'Range Start <span>&nbsp;&nbsp;&nbsp;' + start.value;\r\n            document.getElementById('endRangeValue').innerHTML = 'Range End <span>&nbsp;&nbsp;&nbsp;' + end.value;\r\n            gauge.refresh();\r\n        }\r\n    });\r\n    rangeIndex.appendTo('#rangeIndex');\r\n    document.getElementById('color').onchange = function () {\r\n        var ele = document.getElementById('color');\r\n        gauge.axes[0].ranges[+rangeIndex.value].color = ele.value;\r\n        gauge.refresh();\r\n    };\r\n    document.getElementById('startWidth').ontouchmove = document.getElementById('startWidth').onpointermove =\r\n        document.getElementById('startWidth').onchange = function () {\r\n            var ele = document.getElementById('startWidth');\r\n            gauge.axes[0].ranges[+rangeIndex.value].startWidth = parseInt(ele.value, 10);\r\n            document.getElementById('startWidthValue').innerHTML = 'Range Start Width<span>&nbsp;&nbsp;&nbsp;' + ele.value;\r\n            gauge.refresh();\r\n        };\r\n    document.getElementById('endWidth').ontouchmove = document.getElementById('endWidth').onpointermove =\r\n        document.getElementById('endWidth').onchange = function () {\r\n            var ele = document.getElementById('endWidth');\r\n            gauge.axes[0].ranges[+rangeIndex.value].endWidth = parseInt(ele.value, 10);\r\n            document.getElementById('endWidthValue').innerHTML = 'Range End Width<span>&nbsp;&nbsp;&nbsp;' + ele.value;\r\n            gauge.refresh();\r\n        };\r\n    document.getElementById('start').ontouchmove = document.getElementById('start').onpointermove =\r\n        document.getElementById('start').onchange = function () {\r\n            var start = document.getElementById('start');\r\n            var end = document.getElementById('end');\r\n            gauge.axes[0].ranges[+rangeIndex.value].start = parseInt(start.value, 10);\r\n            gauge.axes[0].ranges[+rangeIndex.value].end = parseInt(end.value, 10);\r\n            document.getElementById('startRangeValue').innerHTML = 'Range Start <span>&nbsp;&nbsp;&nbsp;' + start.value;\r\n            gauge.refresh();\r\n        };\r\n    document.getElementById('end').ontouchmove = document.getElementById('end').onpointermove =\r\n        document.getElementById('end').onchange = function () {\r\n            var start = document.getElementById('start');\r\n            var end = document.getElementById('end');\r\n            gauge.axes[0].ranges[+rangeIndex.value].start = parseInt(start.value, 10);\r\n            gauge.axes[0].ranges[+rangeIndex.value].end = parseInt(end.value, 10);\r\n            document.getElementById('endRangeValue').innerHTML = 'Range End <span>&nbsp;&nbsp;&nbsp;' + end.value;\r\n            gauge.refresh();\r\n        };\r\n    var useRangeColor = new ej.dropdowns.DropDownList({\r\n        index: 0,\r\n        placeholder: 'Select Range Bar Color',\r\n        width: 120,\r\n        change: function () {\r\n            gauge.axes[0].labelStyle.useRangeColor = (useRangeColor.value === 'range') ? true : false;\r\n            gauge.refresh();\r\n        }\r\n    });\r\n    useRangeColor.appendTo('#useRangeColor');\r\n"}