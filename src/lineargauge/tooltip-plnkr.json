{"index.html":"<!DOCTYPE html><html><head>\n<meta charset=\"UTF-8\">\n<link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n<link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n<script type=\"text/javascript\">\n   if (/MSIE d|Trident.*rv:/.test(navigator.userAgent)) {\n       document.write(\"<script src='https://cdnjs.cloudflare.com/ajax/libs/bluebird/3.3.5/bluebird.min.js'><\\/script>\");\n   }\n</script>\n<script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n</head>\n<body>\n<div class=\"control-section\">\n    <div id=\"tooltipContainer\"></div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n<script src=\"index.js\" type=\"text/javascript\"></script>\n\n</body></html>","index.js":"ej.base.enableRipple(true)\n/**\r\n * Linear Gauge Tooltip Sample\r\n */\r\nvar gauge;\r\n\r\n    gauge = new ej.lineargauge.LinearGauge({\r\n        container: {\r\n            width: 140,\r\n            border: {\r\n                width: 2,\r\n                color: '#a6a6a6'\r\n            }\r\n        },\r\n        tooltip: {\r\n            enable: true,\r\n            fill: '#fffff',\r\n            textStyle: {\r\n                color: '#fffff'\r\n            }\r\n        },\r\n        orientation: 'Horizontal',\r\n        axes: [\r\n            {\r\n                minimum: 0,\r\n                maximum: 10,\r\n                line: {\r\n                    offset: 140\r\n                },\r\n                majorTicks: {\r\n                    interval: 1\r\n                },\r\n                minorTicks: {\r\n                    interval: 0.2\r\n                },\r\n                labelStyle: {\r\n                    font: {\r\n                        color: '#000000'\r\n                    }\r\n                },\r\n                pointers: [{\r\n                    type: 'Bar',\r\n                    value: 5.4,\r\n                    offset: 15,\r\n                    color: '#ff66b3'\r\n                }],\r\n            },\r\n            {\r\n                opposedPosition: true,\r\n                minimum: 0,\r\n                maximum: 25,\r\n                line: {\r\n                    offset: -140,\r\n                },\r\n                labelStyle: {\r\n                    font: {\r\n                        color: '#000000'\r\n                    }\r\n                },\r\n                majorTicks: {\r\n                    interval: 1\r\n                },\r\n                minorTicks: {\r\n                    interval: 0.2\r\n                },\r\n                pointers: [{\r\n                    type: 'Bar',\r\n                    offset: -15,\r\n                    value: 16.5,\r\n                    color: '#4d94ff'\r\n                }]\r\n            }\r\n        ],\r\n        annotations: [\r\n            {\r\n                content: '<div id=\"first\"><h1 style=\"font-size:15px\">Inches</h1></div>',\r\n                axisIndex: 0,\r\n                axisValue: 5.4,\r\n                x: 35,\r\n                y: -58,\r\n                zIndex: '1'\r\n            },\r\n            {\r\n                content: '<div id=\"second\"><h1 style=\"font-size:15px\">Centimeters</h1></div>',\r\n                axisIndex: 1,\r\n                axisValue: 16.5,\r\n                x: 50,\r\n                y: 52,\r\n                zIndex: '1'\r\n            }\r\n        ],\r\n        axisLabelRender: labelRender,\r\n        tooltipRender: renderTooltip,\r\n        load: gaugeLoad,\r\n        loaded: gaugeLoaded,\r\n        resized: gaugeResized,\r\n    });\r\n    gauge.appendTo('#tooltipContainer');\r\n\r\nfunction renderTooltip(args) {\r\n    args.content = (args.axis.visibleRange.max === 25) ? args.content + ' cm' : args.content + ' in';\r\n}\r\nfunction labelRender(args) {\r\n    if (args.axis.visibleRange.min === args.value || args.axis.visibleRange.max === args.value) {\r\n        args.text = '';\r\n    }\r\n}\r\nfunction gaugeMobileSize() {\r\n    gauge.axes[1].majorTicks.interval = 2;\r\n    gauge.axes[1].minorTicks.interval = 1;\r\n    gauge.orientation = 'Vertical';\r\n    gauge.annotations[0].x = -57;\r\n    gauge.annotations[0].y = -30;\r\n    gauge.annotations[1].x = 50;\r\n    gauge.annotations[1].y = -45;\r\n}\r\nfunction gaugeDesktopSize() {\r\n    gauge.axes[1].majorTicks.interval = 1;\r\n    gauge.axes[1].minorTicks.interval = 0.5;\r\n    gauge.orientation = 'Horizontal';\r\n    gauge.annotations[0].x = 35;\r\n    gauge.annotations[0].y = -58;\r\n    gauge.annotations[1].x = 50;\r\n    gauge.annotations[1].y = 52;\r\n}\r\nfunction gaugeResized(args) {\r\n    if (args.currentSize.width < 500) {\r\n        gaugeMobileSize();\r\n    }\r\n    else {\r\n        gaugeDesktopSize();\r\n    }\r\n}\r\nfunction gaugeLoad(args) {\r\n    var selectedTheme = location.hash.split('/')[1];\r\n    selectedTheme = selectedTheme ? selectedTheme : 'Material';\r\n    args.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\r\n    var width = parseInt(((this.width, this.element.offsetWidth) || this.element.offsetWidth || 600), 10);\r\n    if (width < 500) {\r\n        gaugeMobileSize();\r\n    }\r\n    else {\r\n        gaugeDesktopSize();\r\n    }\r\n}\r\nfunction gaugeLoaded(args) {\r\n    if (document.getElementById('tooltipContainer')) {\r\n        if (gauge.availableSize.width < 500) {\r\n            document.getElementById('tooltipContainer_Annotation_0').style.transform = 'rotate(270deg)';\r\n            document.getElementById('tooltipContainer_Annotation_1').style.transform = 'rotate(270deg)';\r\n        }\r\n        else {\r\n            document.getElementById('tooltipContainer_Annotation_0').style.transform = '';\r\n            document.getElementById('tooltipContainer_Annotation_1').style.transform = '';\r\n        }\r\n    }\r\n}"}