{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/pivot-view/charts/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"//npmci.syncfusion.com/packages/development/dist/ej2.min.js\" type=\"text/javascript\"></script>\n<link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n<link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\"><style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-12 control-section\" style=\"overflow:auto;\">\n    <div class=\"content-wrapper\">\n        <div id=\"PivotView\" style=\"width: 100%;height:100%;\"></div>\n    </div>\n    <br>\n    <br>\n    <div id=\"chart\" style=\"height: 450px;\"></div>\n    <div id=\"ddldiv\" style=\"float: right;margin-right: 10px\">\n        <select id=\"measures\" name=\"ddl-view-mode\">\n            <option value=\"In Stock\" selected>In Stock</option>\n            <option value=\"Unit Sold\">Units Sold</option>\n        </select>\n    </div>\n</div>\n\n\n\n<style>\n    #ddldiv {\n        margin-top: -446px;\n    }\n\n    .e-bigger #ddldiv {\n        margin-top: -452px;\n    }\n\n    #ddldiv.e-device {\n        margin-top: -480px;\n    }\n\n    @media only screen and (max-width: 400px) {\n        ddldiv {\n            margin-top: -480px;\n        }\n    }\n</style></div></body></html>","index.js":"{{ripple}}/**\n * PivotView Sample with Chart integration.\n */\n\n    var onInit = true;\n    var measure = 'In Stock';\n    var engineModule;\n    var chart;\n    ej.base.enableRipple(false);\n    var pivotGridObj = new ej.pivotview.PivotView({\n        dataSource: {\n            enableSorting: true,\n            columns: [{ name: 'Year' }, { name: 'Order_Source', caption: 'Order Source' }],\n            rows: [{ name: 'Country' }, { name: 'Products' }],\n            valueSortSettings: { headerDelimiter: ' - ' },\n            data: window.Pivot_Data,\n            expandAll: false,\n            values: [{ name: 'In_Stock', caption: 'In Stock' }, { name: 'Sold', caption: 'Units Sold' }],\n            filters: []\n        },\n        width: '100%',\n        height: 300,\n        gridSettings: { columnWidth: 120 },\n        dataBound: function (args) {\n            if (onInit) {\n                onChartLoad();\n            }\n        }\n    });\n    pivotGridObj.appendTo('#PivotView');    \n    var measuresddl = new ej.dropdowns.DropDownList({\n        change: function (args) {\n            measure = args.value.toString();\n            onChartLoad();\n        }\n    });\n    measuresddl.appendTo('#measures');\n    /* tslint:disable */\n    function onChartLoad() {\n        if (ej.base.Browser.isDevice) {\n            ej.base.addClass([document.getElementById('ddldiv')], 'e-device');\n        }\n        if (onInit) {\n            onInit = false;\n            engineModule = ej.base.extend({}, pivotGridObj.engineModule, null, true);\n        }\n        if (engineModule) {\n            var valuesContent = engineModule.valueContent;\n            var data = [];\n            for (var cCnt = 0; cCnt < valuesContent.length; cCnt++) {\n                if (!valuesContent[cCnt][0].type) {\n                    data[cCnt] = valuesContent[cCnt];\n                }\n            }\n            var chartSeries = void 0;\n            for (cCnt = 0; cCnt < 1; cCnt++) {\n                if (data[cCnt]) {\n                    for (var rCnt = measure === 'In Stock' ? 1 : 2; rCnt < Object.keys(data[cCnt]).length; rCnt++) {\n                        if (data[cCnt][rCnt] && !engineModule.pivotValues[0][rCnt].type && !data[cCnt][rCnt].type && rCnt > 0) {\n                            var colText = engineModule.pivotValues[0][rCnt].formattedText;\n                            if (!chartSeries) {\n                                chartSeries = [{\n                                    dataSource: data,\n                                    xName: cCnt + '.valueSort.levelName',\n                                    yName: rCnt + '.value',\n                                    type: 'Column',\n                                    name: colText\n                                }];\n                            }\n                            else {\n                                chartSeries.push({\n                                    dataSource: data,\n                                    xName: cCnt + '.valueSort.levelName',\n                                    yName: rCnt + '.value',\n                                    type: 'Column',\n                                    name: colText\n                                });\n                            }\n                            rCnt++;\n                        }\n                    }\n                }\n            }\n            if (chart && chart.element) {\n                chart.primaryYAxis = {\n                    title: measure\n                };\n                chart.primaryXAxis = {\n                    valueType: 'Category',\n                    title: 'Country',\n                    labelIntersectAction: 'Rotate45'\n                };\n                chart.series = chartSeries;\n                chart.refresh();\n            }\n            else {                \n                chart = new ej.charts.Chart({\n                    title: 'Sales Analysis',\n                    legendSettings: {\n                        visible: true\n                    },\n                    tooltip: {\n                        enable: true\n                    },\n                    primaryYAxis: {\n                        title: measure,\n                    },\n                    primaryXAxis: {\n                        valueType: 'Category',\n                        title: 'Country',\n                        labelIntersectAction: 'Rotate45'\n                    },\n                    series: chartSeries,\n                    load: function (args) {\n                        var selectedTheme = location.hash.split('/')[1];\n                        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n                        args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n                    }\n                }, '#chart');\n            }\n        }\n    }\n\n"}